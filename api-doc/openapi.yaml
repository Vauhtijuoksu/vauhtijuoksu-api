openapi: 3.0.3
info:
  version: 0.0.7
  title: Vauhtijuoksu API
servers:
  - url: https://api.dev.vauhtijuoksu.fi
  - url: https://mockapi.dev.vauhtijuoksu.fi
  - url: https://mockapi.localhost/
paths:
  /donations:
    get:
      description:
        Get all donations with one request. List of individual donations with
        metadata.
      responses:
        '200':
          $ref: '#/components/responses/AllDonations'
    post:
      description: Add a new donation object.
      security:
        - basicAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DonationInput'
      responses:
        '201':
          $ref: '#/components/responses/Donation'
  /donations/{donationId}:
    parameters:
      - name: donationId
        in: path
        required: true
        description: Donation id (uuid).
        schema:
          type: string
          format: uuid
    get:
      description: Get donation by id.
      responses:
        '200':
          $ref: '#/components/responses/Donation'
    patch:
      description: Patch donation data.
      security:
        - basicAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DonationPatch'
      responses:
        '200':
          $ref: '#/components/responses/Donation'
    delete:
      description: Delete donation.
      security:
        - basicAuth: [ ]
      responses:
        '204':
          $ref: '#/components/responses/Empty'
  /gamedata:
    get:
      description:
        Get list of all game data. List of games that are scheduled for the event.
      responses:
        '200':
          $ref: '#/components/responses/AllGameData'
    post:
      description: Add a new gamedata object.
      security:
        - basicAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameDataInput'
      responses:
        '201':
          $ref: '#/components/responses/GameData'
  /gamedata/{gamedataId}:
    parameters:
      - name: gamedataId
        in: path
        required: true
        description: Game data id (uuid).
        schema:
          type: string
          format: uuid
    get:
      description: Get game data by id.
      responses:
        '200':
          $ref: '#/components/responses/GameData'
    patch:
      description: Patch game data.
      security:
        - basicAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameDataPatch'
      responses:
        '200':
          $ref: '#/components/responses/GameData'
    delete:
      description: Delete game data.
      security:
        - basicAuth: [ ]
      responses:
        '204':
          $ref: '#/components/responses/Empty'
  /participants:
    get:
      description:
        Get all participants, such as players and couch people
      responses:
        '200':
          $ref: '#/components/responses/ParticipantList'
    post:
      description:
        Add a participant
      security:
        - basicAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantAdd'
      responses:
        '201':
          $ref: '#/components/responses/Participant'

  /participants/{participantId}:
    parameters:
      - name: participantId
        in: path
        required: true
        description: An unique identifier for a participant
        schema:
          type: string
          format: uuid
    get:
      description:
        Get a participant by id
      responses:
        '200':
          $ref: '#/components/responses/Participant'
    patch:
      description:
        Modify participant info
      security:
        - basicAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantPatch'
      responses:
        '200':
          $ref: '#/components/responses/Participant'
    delete:
      description:
        Remove a participant by id
      security:
        - basicAuth: [ ]
      responses:
        '204':
          $ref: '#/components/responses/Empty'

  /players:
    get:
      deprecated: true
      description:
        Get all players. Deprecated. Use participants instead
      responses:
        '200':
          $ref: '#/components/responses/PlayerList'
    post:
      deprecated: true
      description:
        Add a player. Deprecated. Use participants instead
      security:
        - basicAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerInput'
      responses:
        '201':
          $ref: '#/components/responses/PlayerOk'
  /players/{playerId}:
    parameters:
      - name: playerId
        in: path
        required: true
        description: An unique identifier for a player
        schema:
          type: string
          format: uuid
    get:
      deprecated: true
      description:
        Get a player by id. Deprecated. Use participants instead
      responses:
        '200':
          $ref: '#/components/responses/PlayerOk'
    patch:
      deprecated: true
      description:
        Modify player info. Deprecated. Use participants instead
      security:
        - basicAuth: [ ]
      responses:
        '200':
          $ref: '#/components/responses/PlayerOk'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerPatch'
    delete:
      deprecated: true
      description:
        Remove a player by id. Deprecated. Use participants instead
      security:
        - basicAuth: [ ]
      responses:
        '204':
          $ref: '#/components/responses/Empty'
  /stream-metadata:
    get:
      description:
        Get stream metadata. This is meant for misc information shown on stream
        layout
      responses:
        '200':
          $ref: '#/components/responses/StreamMetadataOk'
    patch:
      description: Patch stream metadata.
      security:
        - basicAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamMetadataPatch'
      responses:
        '200':
          $ref: '#/components/responses/StreamMetadataOk'
  /timers:
    post:
      description: Add a new timer object.
      security:
        - basicAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimerInput'
      responses:
        '201':
          $ref: '#/components/responses/TimerOk'
  /timers/{timerId}:
    parameters:
      - name: timerId
        in: path
        required: true
        description: Timer id (uuid).
        schema:
          type: string
          format: uuid
    patch:
      description: Patch timer
      security:
        - basicAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimerPatch'
      responses:
        '200':
          $ref: '#/components/responses/TimerOk'
    delete:
      description: Delete timer
      security:
        - basicAuth: [ ]
      responses:
        '204':
          $ref: '#/components/responses/Empty'
  /player-info:
    get:
      description:
        Get player info. This is used for displaying messages for player when they
        are on stream.
      responses:
        '200':
          $ref: '#/components/responses/PlayerInfoOk'
    patch:
      description: Patch player info.
      security:
        - basicAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerInfo'
      responses:
        '200':
          $ref: '#/components/responses/PlayerInfoOk'
  /incentives:
    get:
      description:
        Get list of all incentives. These are incentives for donating money to charity for
        exchange to influence what happens on stream.
      responses:
        '200':
          $ref: '#/components/responses/IncentivesAllOk'
    post:
      description: Add a new incentive object.
      security:
        - basicAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncentiveInput'
      responses:
        '201':
          $ref: '#/components/responses/IncentiveOk'
  /incentives/{incentiveId}:
    parameters:
      - name: incentiveId
        in: path
        required: true
        description: Incentive id (uuid).
        schema:
          type: string
          format: uuid
    get:
      description: Get incentive by id.
      responses:
        '200':
          $ref: '#/components/responses/IncentiveOk'
    patch:
      description: Patch incentive
      security:
        - basicAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncentivePatch'
      responses:
        '200':
          $ref: '#/components/responses/IncentiveOk'
    delete:
      description: Delete incentive
      security:
        - basicAuth: [ ]
      responses:
        '204':
          $ref: '#/components/responses/Empty'
  /generate-incentive-code:
    post:
      description: Add a new incentive code object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncentiveCodeInput'
      responses:
        '201':
          $ref: '#/components/responses/OkReturnCode'

components:
  responses:
    Empty:
      description: An empty response
    OkReturnCode:
      description: Return incentive code when POST is successful
      content:
        application/json:
          schema:
            properties:
              code:
                type: string
    AllDonations:
      description: List of donations
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Donations'
    Donation:
      description: Donation by id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DonationOutput'
    AllGameData:
      description: List of game data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GameDataAll'
    GameData:
      description: Game data by id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GameDataOutput'
    Participant:
      description: A single participant
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Participant'
    ParticipantList:
      description: A list of participants
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Participant'
    PlayerList:
      description: A list of players
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Player'
    PlayerOk:
      description: A player
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Player'
    StreamMetadataOk:
      description: Stream metadata
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StreamMetadata'
    PlayerInfoOk:
      description: Player info
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PlayerInfo'
    IncentivesAllOk:
      description: List of incentives
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Incentives'
    IncentiveOk:
      description: Incentives by id (uuid)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IncentiveOutput'
    TimerOk:
      description: Timers by id (uuid)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Timer'

  schemas:
    Donations:
      type: array
      items:
        $ref: '#/components/schemas/DonationOutput'
      example:
        - id: 021c2143-5400-4087-92e8-0c67252685b5
          timestamp: '2021-09-21T15:05:47.000+00:00'
          name: jsloth
          message: 'ota tää :D 🤔🤔 {Vj#2020}'
          read: false
          amount: 10
          external_id: "a non unique string"
          incentives:
            - code: '{Vj#2020}'
              chosen_incentives:
                - incentive_id: d3fed394-193b-493b-b670-c9bea2bdfab0
                  parameter: kissa
        - id: ecf0ef85-06ba-4d5d-b032-775b560ee5de
          timestamp: '2021-09-21T15:05:50.000+00:00'
          name: luuranki
          message: 'mee tänne: töihin :))))))))'
          read: false
          amount: 5
          external_id: "another non unique string"
    DonationInput:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        name:
          type: string
        message:
          type: string
        read:
          type: boolean
          default: false
        amount:
          type: number
      required:
        - timestamp
        - name
        - amount
      example:
        timestamp: '2021-09-21T15:05:47.000+00:00'
        name: jsloth
        message: ota tää :D 🤔🤔
        read: false
        amount: 10
        external_id: "a non unique string"
    DonationPatch:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        name:
          type: string
        message:
          type: string
        read:
          type: boolean
          default: false
        amount:
          type: number
        external_id:
          type: string
      example:
        name: jsloth
        message: ota tää :D 🤔🤔
    DonationOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        name:
          type: string
        message:
          type: string
        read:
          type: boolean
          default: false
        amount:
          type: number
        incentives:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              chosen_incentives:
                type: array
                items:
                  type: object
                  properties:
                    incentive_id:
                      type: string
                    parameter:
                      type: string
      required:
        - id
        - name
        - timestamp
        - amount
      example:
        - id: 021c2143-5400-4087-92e8-0c67252685b5
          timestamp: '2021-09-21T15:05:47.000+00:00'
          name: jsloth
          message: 'ota tää :D 🤔🤔 {Vj#2020}'
          read: false
          amount: 10
          external_id: "a non unique string"
          incentives:
            - code: '{Vj#2020}'
              chosen_incentives:
                - incentive_id: d3fed394-193b-493b-b670-c9bea2bdfab0
                  parameter: kissa
    GameData:
      type: object
      properties:
        id:
          type: string
          format: uuid
        game:
          type: string
        participants:
          type: array
          items:
            $ref: '#/components/schemas/GameParticipant'
        players:
          type: array
          items:
            type: string
            format: uuid
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        category:
          type: string
        device:
          type: string
        published:
          type: string
        vod_link:
          type: string
        img_filename:
          type: string
        meta:
          type: string
      required:
        - id
        - game
        - participants
        - players
        - start_time
        - end_time
        - category
        - device
        - published
      example:
        id: 1fbdc860-170c-4231-b354-464a2dfab94b
        game: Tetris
        participants:
          - id: be3649a7-50e4-44e9-b157-05a3fbcf738c
            role: PLAYER
          - id: 91aee618-2c62-42a1-b025-106baf6b71e7
            role: COUCH
        players: [ be3649a7-50e4-44e9-b157-05a3fbcf738c ]
        start_time: '2021-09-21T15:05:47.000+00:00'
        end_time: '2021-09-21T16:05:47.000+00:00'
        category: any%
        device: PC
        published: '1970'
        vod_link: https://www.youtube.com/watch?v=dQw4w9WgXcQ
        img_filename: tetris.png
        meta: k18
    GameDataAll:
      type: array
      items:
        $ref: '#/components/schemas/GameData'
      example:
        - id: 1fbdc860-170c-4231-b354-464a2dfab94b
          game: Tetris
          participants:
            - id: be3649a7-50e4-44e9-b157-05a3fbcf738c
              role: PLAYER
            - id: 91aee618-2c62-42a1-b025-106baf6b71e7
              role: COUCH
          players: [ be3649a7-50e4-44e9-b157-05a3fbcf738c ]
          start_time: '2021-09-21T15:05:47.000+00:00'
          end_time: '2021-09-21T16:05:47.000+00:00'
          category: any%
          device: PC
          published: '1970'
          vod_link: https://www.youtube.com/watch?v=dQw4w9WgXcQ
          img_filename: tetris.png
          meta: k18
        - id: 1571fccf-cc89-48ce-82d4-6b2173d782ec
          game: Tetris2
          participants:
            - id: 91aee618-2c62-42a1-b025-106baf6b71e7
              role: PLAYER
          players: [ 91aee618-2c62-42a1-b025-106baf6b71e7 ]
          start_time: '2021-09-21T15:07:47.000+00:00'
          end_time: '2021-09-21T16:08:47.000+00:00'
          category: any% no t
          device: PC
          published: '1971'
          vod_link: https://www.youtube.com/watch?v=dQw4w9WgXcQ
          img_filename: tetris.png
          meta: k18
    GameDataInput:
      type: object
      properties:
        game:
          type: string
        players:
          type: array
          items:
            type: string
            format: uuid
        participants:
          type: array
          items:
            $ref: '#/components/schemas/GameParticipant'
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        category:
          type: string
        device:
          type: string
        published:
          type: string
        vod_link:
          type: string
        img_filename:
          type: string
        meta:
          type: string
      required:
        - game
        - players
        - start_time
        - end_time
        - category
        - device
        - published
      example:
        game: Tetris
        players: [ ]
        start_time: '2021-09-21T15:05:47.000+00:00'
        end_time: '2021-09-21T16:05:47.000+00:00'
        category: any%
        device: PC
        published: '1970'
        vod_link: https://www.youtube.com/watch?v=dQw4w9WgXcQ
        img_filename: tetris.png
        meta: k18
    GameDataPatch:
      type: object
      properties:
        game:
          type: string
        players:
          type: array
          items:
            type: string
            format: uuid
        participants:
          type: array
          items:
            $ref: '#/components/schemas/GameParticipant'
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        category:
          type: string
        device:
          type: string
        published:
          type: string
        vod_link:
          type: string
        img_filename:
          type: string
        meta:
          type: string
      example:
        game: Tetris
        device: PC
        published: '1970'
    GameDataOutput:
      type: object
      properties:
        game:
          type: string
        players:
          type: array
          items:
            type: string
            format: uuid
        participants:
          type: array
          items:
            $ref: '#/components/schemas/GameParticipant'
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        category:
          type: string
        device:
          type: string
        published:
          type: string
        vod_link:
          type: string
        img_filename:
          type: string
        meta:
          type: string
      required:
        - game
        - players
        - participants
        - start_time
        - end_time
        - category
        - device
        - published
      example:
        id: 1571fccf-cc89-48ce-82d4-6b2173d782ec
        game: Tetris2
        players: [ 91aee618-2c62-42a1-b025-106baf6b71e7 ]
        participants:
          - id: 91aee618-2c62-42a1-b025-106baf6b71e7
            role: PLAYER
        start_time: '2021-09-21T15:07:47.000+00:00'
        end_time: '2021-09-21T16:08:47.000+00:00'
        category: any% no t
        device: PC
        published: '1971'
        vod_link: https://www.youtube.com/watch?v=dQw4w9WgXcQ
        img_filename: tetris.png
        meta: k18
    GameParticipant:
      type: object
      properties:
        id:
          type: string
          format: uuid
        role:
          type: string
          enum: [ PLAYER, COUCH ]
      required:
        - id
        - role
    GameParticipantPatch:
      type: object
      properties:
        id:
          type: string
          format: uuid
        role:
          type: string
          enum: [ PLAYER, COUCH ]
    PlayerList:
      type: array
      items:
        $ref: '#/components/schemas/Player'
      example:
        - id: be3649a7-50e4-44e9-b157-05a3fbcf738c
          display_name: glukoosi
          twitch_channel: hluposti
          discord_nick: sakkaroosi#9898
        - id: 91aee618-2c62-42a1-b025-106baf6b71e7
          display_name: jiisloth
          twitch_channel: jeesloth
          discord_nick: jooosloth#1234
    Participant:
      type: object
      properties:
        id:
          type: string
          format: uuid
        display_name:
          type: string
        social_medias:
          type: array
          items:
            type: object
            properties:
              nick:
                type: string
              platform:
                type: string
                enum: [ TWITCH, DISCORD ]
            required:
              - nick
              - platform
      required:
        - id
        - display_name
        - social_medias
      example:
        id: 91aee618-2c62-42a1-b025-106baf6b71e7
        role: player
        social_medias:
          - type: TWITCH
            nick: jiisloth
          - type: DISCORD
            nick: joosloth#1234
    ParticipantAdd:
      type: object
      properties:
        display_name:
          type: string
        social_medias:
          type: array
          items:
            $ref: '#/components/schemas/SocialMedia'
      required:
        - display_name
        - social_medias
      example:
        display_name: jiisloth
        social_medias: [ ]
    ParticipantPatch:
      type: object
      properties:
        display_name:
          type: string
        social_medias:
          type: array
          items:
            $ref: '#/components/schemas/SocialMedia'
      example:
        display_name: jiisloth
    Player:
      type: object
      properties:
        id:
          type: string
          format: uuid
        display_name:
          type: string
        twitch_channel:
          type: string
        discord_nick:
          type: string
      required:
        - id
        - display_name
      example:
        id: 91aee618-2c62-42a1-b025-106baf6b71e7
        display_name: jiisloth
        twitch_channel: jeesloth
        discord_nick: jooosloth#1234
    PlayerInput:
      type: object
      properties:
        display_name:
          type: string
          minLength: 1
        twitch_channel:
          type: string
        discord_nick:
          type: string
      required:
        - display_name
      example:
        display_name: jiisloth
        twitch_channel: jeesloth
        discord_nick: jooosloth#1234
    PlayerPatch:
      type: object
      properties:
        id:
          type: string
          format: uuid
        display_name:
          type: string
        twitch_channel:
          type: string
        discord_nick:
          type: string
      example:
        discord_nick: juusloth#4321
    SocialMedia:
      properties:
        username:
          type: string
        platform:
          type: string
          enum:
            - TWITCH
            - YOUTUBE
      required:
        - username
        - platform
    StreamMetadata:
      type: object
      properties:
        donation_goal:
          type: integer
        current_game_id:
          type: string
          format: uuid
        now_playing:
          type: string
        donatebar_info:
          type: array
          items:
            type: string
        counters:
          type: array
          items:
            type: integer
        heart_rates:
          type: array
          items:
            type: integer
        server_time:
          type: string
          format: date-time
        timers:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              start_time:
                type: string
                nullable: true
                format: date-time
              end_time:
                type: string
                nullable: true
                format: date-time
      required:
        - donation_goal
      example:
        donation_goal: 10000
        current_game_id: 1fbdc860-170c-4231-b354-464a2dfab94b
        now_playing: Deerboy - Huutia
        donatebar_info:
          - lahjota rahhaa
          - mee töihi :D
        counters:
          - 1
          - 7
          - 6
          - 9
        heart_rates:
          - 69
          - 96
          - 150
          - 300
        timers:
          - id: 91aee618-2c62-42a1-b025-106baf6b71e7
            start_time: '2021-09-21T16:08:47.000+00:00'
            end_time: '2021-09-22T16:08:47.000+00:00'
            name: ykköstimer
          - id: 91aee618-2c62-42a1-b025-106baf6b71e8
            start_time: '2021-09-21T16:08:47.000+00:00'
            end_time: null
    StreamMetadataPatch:
      type: object
      properties:
        donation_goal:
          type: integer
        current_game_id:
          type: string
          format: uuid
        now_playing:
          type: string
        donatebar_info:
          type: array
          items:
            type: string
        counters:
          type: array
          items:
            type: integer
        heart_rates:
          type: array
          items:
            type: integer
      required:
        - donation_goal
      example:
        donation_goal: 10000
        current_game_id: 1fbdc860-170c-4231-b354-464a2dfab94b
        now_playing: Deerboy - Huutia
        donatebar_info:
          - lahjota rahhaa
          - mee töihi :D
        counters:
          - 1
          - 7
          - 6
          - 9
        heart_rates:
          - 69
          - 96
          - 150
          - 300
    PlayerInfo:
      type: object
      properties:
        message:
          type: string
      example:
        message: Lahjoituksia luettavana!!
    Incentives:
      type: array
      items:
        $ref: '#/components/schemas/IncentiveOutput'
      example:
        - id: 6c28df04-b9d2-4ebe-bd33-58c9b290d929
          game_id: 1fbdc860-170c-4231-b354-464a2dfab94b
          title: Ei pyörimistä
          end_time: '2021-09-21T16:08:47.000+00:00'
          type: milestone
          milestones:
            - 200
            - 300
          info: Ei saa pyörittää palikoita
          total_amount: 250
          status:
            - type: milestone
              milestone_goal: 200
              status: completed
            - type: milestone
              milestone_goal: 300
              status: incomplete
        - id: d3fed394-193b-493b-b670-c9bea2bdfab0
          game_id: 1fbdc860-170c-4231-b354-464a2dfab94b
          title: silmät kii
          end_time: '2021-09-21T19:08:47.000+00:00'
          type: option
          option_parameters:
            - kissa
            - koira
          info: Saa kattoa vaan kissoja tai koiria
          total_amount: 250
          status:
            - type: option
              option: kissa
              amount: 100
            - type: option
              option: koira
              amount: 150
        - id: 3a896646-70e0-4943-a3e3-01f29d0541f1
          game_id: 1fbdc860-170c-4231-b354-464a2dfab94b
          title: Tetrispakikan nimi
          end_time: '2021-09-21T19:08:47.000+00:00'
          type: open
          open_char_limit: 10
          info: Nimeä tetrispalikka poggers
          total_amount: 250
          status:
            - type: option
              option: palikke
              amount: 100
            - type: option
              option: joku_muu
              amount: 150
    IncentiveInput:
      type: object
      properties:
        game_id:
          type: string
          format: uuid
          description: Reference to a gamedata object id
        title:
          type: string
        info:
          type: string
        end_time:
          type: string
          format: date-time
        type:
          type: string
          enum:
            - milestone
            - option
            - open
        milestones:
          type: array
          description: Milestone monetary amounts. Required when type is milestone, forbidden otherwise
          items:
            type: integer
        option_parameters:
          type: array
          description: Parameters to choose from when donating to this incentive. Required when type is option, forbidden otherwise
          items:
            type: string
        open_char_limit:
          type: integer
          description: Max lenght of incentive text. Required when type is open, forbidden otherwise
      required:
        - title
        - type
      example:
        title: Tetrispakikan nimi
        game_id: 1fbdc860-170c-4231-b354-464a2dfab94b
        end_time: '2021-09-21T19:08:47.000+00:00'
        type: open
        open_char_limit: 10
        info: Nimeä tetrispalikka poggers
    IncentivePatch:
      type: object
      properties:
        game_id:
          type: string
          format: uuid
          description: Reference to a gamedata object id
        title:
          type: string
        info:
          type: string
        end_time:
          type: string
          format: date-time
      example:
        end_time: '2021-09-21T19:08:47.000+00:00'
        info: Nimeä tetrispalikka poggers
    IncentiveOutput:
      type: object
      properties:
        id:
          type: string
        game_id:
          type: string
          format: uuid
          description: Reference to a gamedata object id
        title:
          type: string
        info:
          type: string
        end_time:
          type: string
          format: date-time
        type:
          type: string
          enum:
            - milestone
            - option
            - open
        milestones:
          type: array
          description: Milestone monetary amounts. Required when type is milestone, forbidden otherwise
          items:
            type: integer
        option_parameters:
          type: array
          description: Parameters to choose from when donating to this incentive. Required when type is option, forbidden otherwise
          items:
            type: string
        open_char_limit:
          type: integer
          description: Max length of incentive text. Required when type is open, forbidden otherwise
        status:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              milestone_goal:
                type: number
              status:
                type: string
              option:
                type: string
              amount:
                type: number
      required:
        - id
        - title
        - type
      example:
        id: 6c28df04-b9d2-4ebe-bd33-58c9b290d929
        game_id: 1fbdc860-170c-4231-b354-464a2dfab94b
        title: Ei pyörimistä
        end_time: '2021-09-21T16:08:47.000+00:00'
        type: milestone
        milestones:
          - 200
          - 300
        info: Ei saa pyörittää palikoita
        total_amount: 250
        status:
          - type: milestone
            milestone_goal: 200
            status: completed
          - type: milestone
            milestone_goal: 300
            status: incomplete
    IncentiveCodeInput:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            format: uuid
          parameter:
            type: string
        example:
          id: 3a896646-70e0-4943-a3e3-01f29d0541f1
          parameter: kalle tetr
    Timer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
      required:
        - id
        - name
      example:
        id: 91aee618-2c62-42a1-b025-106baf6b71e7
        name: ykköstimeri
        start_time: '2023-09-21T15:05:47.000+00:00'
        end_time: '2023-09-21T15:05:48.000+00:00'
    TimerInput:
      type: object
      properties:
        name:
          type: string
        start_time:
          type: string
          format: date-time
          nullable: true
        end_time:
          type: string
          format: date-time
          nullable: true
      required:
        - name
      example:
        name: ykköstimeri
        start_time: '2023-09-21T15:05:47.000+00:00'
        end_time: '2023-09-21T15:05:48.000+00:00'
    TimerPatch:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        start_time:
          type: string
          format: date-time
          nullable: true
        end_time:
          type: string
          format: date-time
          nullable: true
      example:
        id: 91aee618-2c62-42a1-b025-106baf6b71e7
        name: ykköstimeri
        end_time: '2023-09-21T15:05:48.000+00:00'


  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
