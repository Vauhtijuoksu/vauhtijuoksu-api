openapi: 3.0.3
info:
  version: 0.0.7
  title: Vauhtijuoksu API
servers:
  - url: https://api.dev.vauhtijuoksu.fi
paths:
  /donations:
    get:
      description:
        Get all donations with one request. List of individual donations with
        metadata.
      responses:
        '200':
          $ref: '#/components/responses/AllDonations'
    post:
      description: Add a new donation object.
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DonationInput'
      responses:
        '201':
          $ref: '#/components/responses/Donation'
  /donations/{donationId}:
    parameters:
      - name: donationId
        in: path
        required: true
        description: Donation id (uuid).
        schema:
          type: string
          format: uuid
    get:
      description: Get donation by id.
      responses:
        '200':
          $ref: '#/components/responses/Donation'
    patch:
      description: Patch donation data.
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DonationPatch'
      responses:
        '200':
          $ref: '#/components/responses/Donation'
    delete:
      description: Delete donation.
      security:
        - basicAuth: []
      responses:
        '204':
          $ref: '#/components/responses/Empty'
  /gamedata:
    get:
      description:
        Get list of all game data. List of games that are scheduled for the event.

      responses:
        '200':
          $ref: '#/components/responses/AllGameData'
    post:
      description: Add a new gamedata object.
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameDataInput'
      responses:
        '201':
          $ref: '#/components/responses/GameData'
  /gamedata/{gamedataId}:
    parameters:
      - name: gamedataId
        in: path
        required: true
        description: Game data id (uuid).
        schema:
          type: string
          format: uuid
    get:
      description: Get game data by id.
      responses:
        '200':
          $ref: '#/components/responses/GameData'
    patch:
      description: Patch game data.
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameDataPatch'
      responses:
        '200':
          $ref: '#/components/responses/GameData'
    delete:
      description: Delete game data.
      security:
        - basicAuth: []
      responses:
        '204':
          $ref: '#/components/responses/Empty'
  /stream-metadata:
    get:
      description:
        Get stream metadata. This is meant for misc information shown on stream
        layout
      responses:
        '200':
          $ref: '#/components/responses/StreamMetadataOk'
    patch:
      description: Patch stream metadata.
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamMetadata'
      responses:
        '200':
          $ref: '#/components/responses/StreamMetadataOk'
  /player-info:
    get:
      description:
        Get player info. This is used for displaying messages for player when they
        are on stream.
      responses:
        '200':
          $ref: '#/components/responses/PlayerInfoOk'
    patch:
      description: Patch player info.
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerInfo'
      responses:
        '200':
          $ref: '#/components/responses/PlayerInfoOk'
  /incentives:
    get:
      description:
        Get list of all incentives. These are incentives for donating money to charity for
        exchange to influence what happens on stream.
      responses:
        '200':
          $ref: '#/components/responses/IncentivesAllOk'
    post:
      description: Add a new incentive object.
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncentiveInput'
      responses:
        '201':
          $ref: '#/components/responses/IncentiveOk'
  /incentives/{incentiveId}:
    parameters:
      - name: incentiveId
        in: path
        required: true
        description: Incentive id (uuid).
        schema:
          type: string
          format: uuid
    get:
      description: Get incentive by id.
      responses:
        '200':
          $ref: '#/components/responses/IncentiveOk'
    patch:
      description: Patch incentive
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncentivePatch'
      responses:
        '200':
          $ref: '#/components/responses/IncentiveOk'
    delete:
      description: Delete incentive
      security:
        - basicAuth: []
      responses:
        '204':
          $ref: '#/components/responses/Empty'
  /generate-incentive-code:
    post:
      description: Add a new incentive code object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncentiveCodeInput'
      responses:
        '201':
          $ref: '#/components/responses/OkReturnCode'

components:
  responses:
    Empty:
      description: An empty response
    OkReturnCode:
      description: Return incentive code when POST is successful
      content:
        application/json:
          schema:
            properties:
              code:
                type: string
    AllDonations:
      description: List of donations
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Donations'
    Donation:
      description: Donation by id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DonationOutput'
    AllGameData:
      description: List of game data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GameDataAll'
    GameData:
      description: Game data by id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GameDataOutput'
    StreamMetadataOk:
      description: Stream metadata
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StreamMetadata'
    PlayerInfoOk:
      description: Player info
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PlayerInfo'
    IncentivesAllOk:
      description: List of incentives
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Incentives'
    IncentiveOk:
      description: Incentives by id (uuid)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IncentiveOutput'

  schemas:
    Donations:
      type: array
      items:
        $ref: '#/components/schemas/DonationOutput'
      example:
        - id: 6c28df04-b9d2-4ebe-bd33-58c9b290d929
          timestamp: '2021-09-21T15:05:47.000+00:00'
          name: jsloth
          message: ota tÃ¤Ã¤ :D ðŸ¤”ðŸ¤”
          read: true
          amount: 10
          external_id: "a non unique string"
        - id: 7c28df04-b9d2-4ebe-bd33-58c9b290d930
          timestamp: '2021-09-21T15:05:50.000+00:00'
          name: luuranki
          message: 'mee tÃ¤nne: tÃ¶ihin :))))))))'
          read: false
          amount: 5
          external_id: "a non unique string"
    DonationInput:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        name:
          type: string
        message:
          type: string
        read:
          type: boolean
          default: false
        amount:
          type: number
      required:
        - timestamp
        - name
        - amount
      example:
        timestamp: '2021-09-21T15:05:47.000+00:00'
        name: jsloth
        message: ota tÃ¤Ã¤ :D ðŸ¤”ðŸ¤”
        read: false
        amount: 10
        external_id: "a non unique string"
    DonationPatch:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        name:
          type: string
        message:
          type: string
        read:
          type: boolean
          default: false
        amount:
          type: number
        external_id:
          type: string
      example:
        name: jsloth
        message: ota tÃ¤Ã¤ :D ðŸ¤”ðŸ¤”
    DonationOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        name:
          type: string
        message:
          type: string
        read:
          type: boolean
          default: false
        amount:
          type: number
      required:
        - id
        - name
        - timestamp
        - amount
      example:
      - id: 6c28df04-b9d2-4ebe-bd33-58c9b290d929
        timestamp: '2021-09-21T15:05:47.000+00:00'
        name: jsloth
        message: ota tÃ¤Ã¤ :D ðŸ¤”ðŸ¤”
        read: false
        amount: 10
        external_id: "a non unique string"
    GameData:
      type: object
      properties:
        id:
          type: string
          format: uuid
        game:
          type: string
        player:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        category:
          type: string
        device:
          type: string
        published:
          type: string
        vod_link:
          type: string
        img_filename:
          type: string
        player_twitch:
          type: string
        meta:
          type: string
      required:
        - id
        - game
        - player
        - start_time
        - end_time
        - category
        - device
        - published
      example:
        id: 6c28df04-b9d2-4ebe-bd33-58c9b290d929
        game: Tetris
        player: jsloth
        start_time: '2021-09-21T15:05:47.000+00:00'
        end_time: '2021-09-21T16:05:47.000+00:00'
        category: any%
        device: PC
        published: '1970'
        vod_link: https://www.youtube.com/watch?v=dQw4w9WgXcQ
        img_filename: tetris.png
        player_twitch: jiisloth
        meta: k18
    GameDataAll:
      type: array
      items:
        $ref: '#/components/schemas/GameData'
      example:
        - id: 6c28df04-b9d2-4ebe-bd33-58c9b290d929
          game: Tetris
          player: jsloth
          start_time: '2021-09-21T15:05:47.000+00:00'
          end_time: '2021-09-21T16:05:47.000+00:00'
          category: any%
          device: PC
          published: '1970'
          vod_link: https://www.youtube.com/watch?v=dQw4w9WgXcQ
          img_filename: tetris.png
          player_twitch: jiisloth
          meta: k18
        - id: 6c28df04-b9d2-4ebe-bd33-58c9b290d930
          game: Tetris2
          player: jsloth
          start_time: '2021-09-21T15:07:47.000+00:00'
          end_time: '2021-09-21T16:08:47.000+00:00'
          category: any% no t
          device: PC
          published: '1971'
          vod_link: https://www.youtube.com/watch?v=dQw4w9WgXcQ
          img_filename: tetris.png
          player_twitch: jiisloth
          meta: k18
    GameDataInput:
      type: object
      properties:
        game:
          type: string
        player:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        category:
          type: string
        device:
          type: string
        published:
          type: string
        vod_link:
          type: string
        img_filename:
          type: string
        player_twitch:
          type: string
        meta:
          type: string
      required:
        - game
        - player
        - start_time
        - end_time
        - category
        - device
        - published
      example:
        game: Tetris
        player: jsloth
        start_time: '2021-09-21T15:05:47.000+00:00'
        end_time: '2021-09-21T16:05:47.000+00:00'
        category: any%
        device: PC
        published: '1970'
        vod_link: https://www.youtube.com/watch?v=dQw4w9WgXcQ
        img_filename: tetris.png
        player_twitch: jiisloth
        meta: k18
    GameDataPatch:
      type: object
      properties:
        game:
          type: string
        player:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        category:
          type: string
        device:
          type: string
        published:
          type: string
        vod_link:
          type: string
        img_filename:
          type: string
        player_twitch:
          type: string
        meta:
          type: string
      example:
        game: Tetris
        device: PC
        published: '1970'
        player_twitch: jiisloth
    GameDataOutput:
      type: object
      properties:
        game:
          type: string
        player:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        category:
          type: string
        device:
          type: string
        published:
          type: string
        vod_link:
          type: string
        img_filename:
          type: string
        player_twitch:
          type: string
        meta:
          type: string
      required:
        - game
        - player
        - start_time
        - end_time
        - category
        - device
        - published
      example:
        game: Tetris
        player: jsloth
        start_time: '2021-09-21T15:05:47.000+00:00'
        end_time: '2021-09-21T16:05:47.000+00:00'
        category: any%
        device: PC
        published: '1970'
        vod_link: https://www.youtube.com/watch?v=dQw4w9WgXcQ
        img_filename: tetris.png
        player_twitch: jiisloth
        meta: meta
    StreamMetadata:
      type: object
      properties:
        donation_goal:
          type: integer
        current_game_id:
          type: string
          format: uuid
        donatebar_info:
          type: array
          items:
            type: string
        counters:
          type: array
          items:
            type: integer
        heart-rates:
          type: array
          items:
            type: integer
        timers:
          type: array
          items:
            type: object
            properties:
              start-time:
                type: string
                nullable: true
                format: date-time
              end-time:
                type: string
                nullable: true
                format: date-time
      required:
        - donation_goal
      example:
        donation_goal: 10000
        current_game_id: 6c28df04-b9d2-4ebe-bd33-58c9b290d929
        donatebar_info:
          - lahjota rahhaa
          - mee tÃ¶ihi :D
        counters:
          - 1
          - 7
          - 6
          - 9
        heart-rates:
          - 69
          - 96
          - 150
          - 300
    PlayerInfo:
      type: object
      properties:
        message:
          type: string
      example:
        message: Lahjoituksia luettavana!!
    Incentives:
      type: array
      items:
        $ref: '#/components/schemas/IncentiveOutput'
      example:
        - id: 6c28df04-b9d2-4ebe-bd33-58c9b290d929
          game_id: e356b0a4-cd7f-4b97-ac73-15aee70607dd
          title: Ei pyÃ¶rimistÃ¤
          end_time: '2021-09-21T16:08:47.000+00:00'
          type: milestone
          milestones:
            - 200
            - 300
          info: Ei saa pyÃ¶rittÃ¤Ã¤ palikoita
          total_amount: 250
          status:
            - type: milestone
              milestone_goal: 200
              status: completed
            - type: milestone
              milestone_goal: 300
              status: incomplete
        - id: 6c28df04-b9d2-4ebe-bd33-58c9b290d930
          game: e356b0a4-cd7f-4b97-ac73-15aee70607dd
          title: silmÃ¤t kii
          end_time: '2021-09-21T19:08:47.000+00:00'
          type: option
          option_parameters:
            - kissa
            - koira
          info: Saa kattoa vaan kissoja tai koiria
          total_amount: 250
          status:
             - type: option
               option: kissa
               amount: 100
             - type: option
               option: koira
               amount: 150
        - id: 6c28df04-b9d2-4ebe-bd33-58c9b290d931
          game_id: e356b0a4-cd7f-4b97-ac73-15aee70607dd
          title: Tetrispakikan nimi
          end_time: '2021-09-21T19:08:47.000+00:00'
          type: open
          open_char_limit: 10
          info: NimeÃ¤ tetrispalikka poggers
          total_amount: 250
          status:
             - type: open
               option: palikke
               amount: 100
             - type: open
               option: joku_muu
               amount: 150
    IncentiveInput:
      type: object
      properties:
        game_id:
          type: string
          format: uuid
          description: Reference to a gamedata object id
        title:
          type: string
        info:
          type: string
        end_time:
          type: string
          format: date-time
        type:
          type: string
          enum:
            - milestone
            - option
            - open
        milestones:
          type: array
          description: Milestone monetary amounts. Required when type is milestone, forbidden otherwise
          items:
            type: integer
        option_parameters:
          type: array
          description: Parameters to choose from when donating to this incentive. Required when type is option, forbidden otherwise
          items:
            type: string
        open_char_limit:
          type: integer
          description: Max lenght of incentive text. Required when type is open, forbidden otherwise
      required:
        - title
        - type
      example:
        title: Tetrispakikan nimi
        game_id: e356b0a4-cd7f-4b97-ac73-15aee70607dd
        end_time: '2021-09-21T19:08:47.000+00:00'
        type: open
        open_char_limit: 10
        info: NimeÃ¤ tetrispalikka poggers
    IncentivePatch:
      type: object
      properties:
        game_id:
          type: string
          format: uuid
          description: Reference to a gamedata object id
        title:
          type: string
        info:
          type: string
        end_time:
          type: string
          format: date-time
      example:
        end_time: '2021-09-21T19:08:47.000+00:00'
        info: NimeÃ¤ tetrispalikka poggers
    IncentiveOutput:
      type: object
      properties:
        id:
          type: string
        game_id:
          type: string
          format: uuid
          description: Reference to a gamedata object id
        title:
          type: string
        info:
          type: string
        end_time:
          type: string
          format: date-time
        type:
          type: string
          enum:
            - milestone
            - option
            - open
        milestones:
          type: array
          description: Milestone monetary amounts. Required when type is milestone, forbidden otherwise
          items:
            type: integer
        option_parameters:
          type: array
          description: Parameters to choose from when donating to this incentive. Required when type is option, forbidden otherwise
          items:
            type: string
        open_char_limit:
          type: integer
          description: Max lenght of incentive text. Required when type is open, forbidden otherwise
        status:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              milestone_goal:
                type: number
              status:
                type: string
              option:
                type: string
              amount:
                type: number
      required:
        - id
        - title
        - type
      example:
        id: 6c28df04-b9d2-4ebe-bd33-58c9b290d930
        game_id: e356b0a4-cd7f-4b97-ac73-15aee70607dd
        title: Ei pyÃ¶rimistÃ¤
        end_time: '2021-09-21T16:08:47.000+00:00'
        type: milestone
        milestones:
          - 200
          - 300
        info: Ei saa pyÃ¶rittÃ¤Ã¤ palikoita
        total_amount: 250
        status:
          - type: milestone
            milestone_goal: 200
            status: completed
          - type: milestone
            milestone_goal: 300
    IncentiveCodeInput:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            format: uuid
          parameters:
            type: string
        required:
          - id
        example:
          id: 6c28df04-b9d2-4ebe-bd33-58c9b290d931
          parameter: kalle tetr


  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
